class Complex(object):
    def __init__(self, r, i):
        self.r = r
        self.i = i
 
    def __add__(self, no):
        a=self.r + no.r
        b=self.i + no.i
        return Complex(a,b)
 
    def __sub__(self, no):
        c=self.r - no.r
        d=self.i- no.i
        return Complex(c, d)
 
    def __mul__(self, no):
        return Complex((self.r * no.r) - (self.i * no.i), (self.r * no.i) + (self.i * no.r))
 
    def __div__(self, no):
        return self.__mul__(Complex(no.r, -1*no.i)).__mul__(Complex(1.0 / (no.mod().r)** 2, 0))
 
    def mod(self):
        return Complex(((self.r)**2 + (self.i)**2)**0.5, 0)
 
    def __str__(self):
        if self.i == 0:
            result = "%.2f+0.00i" % (self.r)
        elif self.r == 0:
            if self.i>= 0:
                result = "0.00+%.2fi" % (self.i)
            else:
                 result = "0.00-%.2fi" % (abs(self.i))
        elif self.i > 0:
             result = "%.2f+%.2fi" % (self.r, self.i)
        else:
            result = "%.2f-%.2fi" % (self.r, abs(self.i))
        return result
